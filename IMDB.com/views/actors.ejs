<%- include('components/header'); -%>
<!-- adding movies -->
<div class="row">
    <form name="actor-frm" id="add-frm">
        <div class="col s12 m12 l12">
            <div class="card blue-grey darken-1">
            <div class="card-content white-text add-content">
                <span class="card-title" id="add-title">Add Actor</span>
                <add-component></add-component>
                <update-component></update-component>
            </div>
            <div class="card-action add-card-action">
                    <input name="movieId" id="movie-id" value="0" type="hidden">
                    <button type="submit" class="btn" id="frm-btn">add</button>
                    <button type="reset" class="btn" >cancel</button>
            </div>
            </div>
        </div>
    </form>
</div>

<div>
    <results-table></results-table>
</div>

<%- include('components/footer'); -%>
<!-- actor template -->
<script id="view-actors-template" type="text/html">
    <table id="view-actors-table" class="display">
        <thead>
            <th>&nbsp;</th>
            <th>Name</th>
            <th>SEX</th>
            <th>DOB</th>
            <th>Birth in</th>
            <th>Movies</th>
        </thead>
        <tbody>
        </tbody>
    </table>
</script>
<!-- end actor template -->

<!-- Actor add template -->
<script id="add-actor-template" type="text/html">
    <div class="row">
    <div class="input-field col s12 m6 l6">
        <input placeholder="name" id="actor-name" name="actorName" type="text" class="validate">
        <label for="actor-name">Actor Name</label>
    </div>
    <div class="row">
        <div class="col s12 m6 l6">
            <label>
                <input name="sex" value="M" class="with-gap" type="radio" checked />
                <span>Male</span>
            </label>
            <label>
                <input name="sex" value="F" class="with-gap" type="radio" />
                <span>Female</span>
            </label>
            <label>
                <input name="sex" value="O" class="with-gap" type="radio" />
                <span>Otheer</span>
            </label>
        </div>
    </div>
    <div class="input-field col s12 m6 l6"> 
        <input placeholder="DOB" id="actor-dob" name="actorDob" type="date" class="validate">
        <label for="actor-dob">DOB</label>
    </div>
    <div class="input-field col s12 m6 l6">
        <input placeholder="Birth place" id="actor-birth-place" name="actorDbp" type="text" class="validate">
        <label for="actor-birth-place">Birth place</label>
    </div> 
</div>
</script>
<!-- end Adding template -->

<script src="/js/jquery.min.js"></script>
    <script src="/js/materialize.min.js"></script>
    <script src="/js/materialize.js"></script>
    <script src="/js/jquery.dataTables.min.js"></script>
    <script src="/js/jquery.validation.js"></script>
    <script src="/js/jquery.validate.min.js"></script>
    <script src="/js/sweetalert.min.js"></script>
    <script src="/ajax/myApp.js"></script>
    <script type="text/javascript"></script>
<script>
    $(document).ready(function(){
        var taskActor = {
                loadActorSearchTemplate:function(){
                    $('results-table').html('');
                    $('results-table').html($('#view-actors-template').text());
                    taskActor.loadActors();
                },

                renderActors:function(data){
                    // $('results-table').html('');
                    $('tbody','#view-actors-table').html('');
                    var actors = '';
                    $.each(data, function( index, list ) {
                        var name = list.name;
                        var sex = list.sex;
                        var dob = (list.DOB)?new Date(list.DOB).toISOString()   :'-';
                        // var  = list.department;
                        var birtin = (list.bio.birthIn )?list.bio.birthIn:'';
                        var movies = ((list.bio.movies).length > 0) ?(list.bio.movies).toString():'-';
                        actors = '<tr>';
                        actors += '<td>'+(index+1)+'</td>';   
                        actors += '<td>'+name+'</td>';
                        actors += '<td>'+sex+'</td>';
                        actors += '<td>'+dob+'</td>';
                        actors += '<td>'+birtin+'</td>';
                        actors += '<td>'+movies+'</td>';
                        $('tbody','#view-actors-table').append(actors);
                    });
                    $("#view-actors-table").DataTable({
                            "pageLength":5,
                            "bDestroy": true,
                            "order": []
                        });
                    $('#view-actors-template').text($('#view-actors-table').html());
                },

                loadActors:function(){
                    app.getAllActors().done(function(response){
                        if(response.status == true){
                            taskActor.renderActors(response.data);
                        }
                    });
                },

                loadAddActorTemplate:function(){
                    $('add-component').html($('#add-actor-template').text());
                    taskActor.initAddActorForm();
                    M.updateTextFields();
                }
                ,
                initAddActorForm:function(){
                    $('form[name="actor-frm"]').validate({
                        rules:{
                            actorName:{
                                required:true,
                                maxlength:50,
                                minlength:1
                            },
                            sex:{
                                required:true                    
                            },
                            actorDob:{
                                required:true
                            },
                            actorDbp:{
                                required:true,
                                maxlength:50,
                                minlength:1
                            }       
                        },
                        messages:{
                            actorName:{
                                required:"Actor name is required",
                                maxlength:"Actor name should be within 50 characters",
                                minlength:"Actor name should not be blank"
                            },
                            sex:{
                                required:"Actor gender required"
                            },
                            actorDob:{
                                required:"DOB is required"
                            },
                            actorDbp:{
                                required:"Birth place is required",
                                maxlength:"Birth place should be within 50 characters",
                                minlength:"Birth place should not be blank"
                            }

                        },

                        errorElement:"div",
                        errorPlacement: function(error, element) {
                                var placement = $(element).data('error');
                                if (placement) {
                                    $(placement).append(error)
                                } else {
                                    error.insertAfter(element);
                                }
                        },
                        submitHandler:function(form){
                            var formData = $('form[name="actor-frm"]').serializeObject();
                            app.addActor(formData).done(function(response){
                                if(response.status == true){
                                    // console.log(response.message);
                                    M.toast(response.message,  4000, '');
                                    taskActor.loadActorSearchTemplate();
                                }
                            });
                        }
                    })
                    
                }

        } 
        taskActor.loadActorSearchTemplate();
        taskActor.loadAddActorTemplate();
    });
</script>